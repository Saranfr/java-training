class Queue {
    int[] a = new int[5];
    int front = -1;
    int rear = -1;

    // enqueue ()
    public void enqueue(int data) {
        if (rear == a.length - 1) {
            System.out.println("Queue is full");
        } else {
            if (front == -1) {
                front = 0;
            }
            rear++;
            a[rear] = data;
        }
    }

    // dequeue()
    public void dequeue() {
        if (front == -1 || front > rear) {
            System.out.println("Queue is empty");
        } else {
            System.out.println("Dequeued elements: " + a[front]);
            front++;
            if (front > rear) {
                front = rear = -1; 
            }
        }
    }

    // peek()
    public void peek() {
        if (front == -1 || front > rear) {
            System.out.println("Queue is empty");
        } else {
            System.out.println("Front of the queue: " + a[front]);
        }
    }

    // display()
    public void display() {
        if (front == -1 || front > rear) {
            System.out.println("Queue is empty");
        } else {
            System.out.println("Elements in the queue:");
            for (int i = front; i <= rear; i++) {
                System.out.print(a[i] + " ");
            }
            System.out.println();
        }
    }
}

// main function
public class Main {
    public static void main(String[] args) {
        Queue q = new Queue();
        q.enqueue(10);
        q.enqueue(20);
        q.enqueue(30);
        q.enqueue(40);
        q.enqueue(50);
        q.display();
        q.dequeue();
        q.peek();
        q.display();
    }
}
